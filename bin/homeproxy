#!/bin/zsh
emulate -L zsh
setopt err_exit no_unset
#setopt xtrace

readonly PROXY_SERVER="miyazaki.eatnumber1.com"
readonly PROXY_PORT="10800"
readonly TXT_RECORD="_network.eatnumber1.com"
readonly HOST="$1"
readonly PORT="$2"

function socat_major_version {
	local MATCH MBEGIN MEND
	typeset -a match mbegin mend
	[[ $(socat -V) =~ "version ([[:digit:]]+)\." ]] || return 1
	REPLY=$match
}

function homenet_version {
	local network="$(dig +short TXT $TXT_RECORD)"
	local MATCH MBEGIN MEND
	typeset -a match mbegin mend
	[[ ! -z $network && $network =~ "^\"([^,],)*version=([[:digit:]]+(\.[[:digit:]]+)*)([^,],)*\"$" ]] || return 1
	REPLY=$match[2]
}

if homenet_version; then
	autoload -U znc
	exec znc $HOST $PORT
fi

zmodload -F zsh/parameter +p:commands
if ! (( $+commands[socat] )); then
	print -u 2 "Unable to proxy: socat is not installed"
	exit 1
fi
local REPLY
if ! socat_major_version; then
	print -u 2 "Unable to proxy: socat version unsupported" >&2
	exit 1
fi
case $REPLY in
	1)
		exec socat - socks4a:$PROXY_SERVER:$HOST:$PORT,socksport=$PROXY_PORT
		;;
	2)
		exec socat - "socks5:$HOST:$PORT | tcp-connect:$PROXY_SERVER:$PROXY_PORT"
		;;
	*)
		print -u 2 "Unable to proxy: socat version $REPLY unsupported"
		exit 1
esac
