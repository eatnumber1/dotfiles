#!/bin/zsh
emulate -L zsh
setopt err_exit no_unset warn_create_global
setopt xtrace

readonly PROXY_SERVER="miyazaki.eatnumber1.com"
readonly PROXY_PORT="10800"
readonly TXT_RECORD="_network.eatnumber1.com"
readonly HOST="$1"
readonly PORT="$2"
typeset -ri CACHE_DURATION=$(( 5 * 60 )) # seconds

function socat_major_version {
	local MATCH MBEGIN MEND
	typeset -a match mbegin mend
	[[ $(socat -V) =~ "version ([[:digit:]]+)\." ]] || return 1
	REPLY=$match
}

function homenet_version {
	local cache=${TMPDIR:-/tmp}/homeproxy-version-cache
	if [[ -f $cache ]]; then
		zmodload -F zsh/stat +b:zstat
		zmodload -F zsh/datetime +p:EPOCHSECONDS
		typeset -A stats
		zstat -H stats +mtime $cache
		if [[ $stats[mtime] -gt $(( EPOCHSECONDS - CACHE_DURATION )) ]]; then
			read -r < $cache
			integer ret
			[[ $REPLY -ne -1 ]] || ret=$?
			return $ret
		fi
	fi
	local network="$(dig +short TXT $TXT_RECORD)"
	local MATCH MBEGIN MEND
	typeset -a match mbegin mend
	if [[ ! $network =~ "^\"([^,],)*version=([[:digit:]]+(\.[[:digit:]]+)*)([^,],)*\"$" ]]; then
		echo "-1" > $cache
		return 1
	fi
	REPLY=$match[2]
	echo $REPLY > $cache
}

local REPLY
if homenet_version; then
	autoload -U znc
	exec znc $HOST $PORT
fi

zmodload -F zsh/parameter +p:commands
if ! (( $+commands[socat] )); then
	print -u 2 "Unable to proxy: socat is not installed"
	exit 1
fi
if ! socat_major_version; then
	print -u 2 "Unable to proxy: socat version unsupported" >&2
	exit 1
fi

integer version=$REPLY

case $version in
	1)
		exec socat - socks4a:$PROXY_SERVER:$HOST:$PORT,socksport=$PROXY_PORT
		;;
	2)
		exec socat - "socks5:$HOST:$PORT | tcp-connect:$PROXY_SERVER:$PROXY_PORT"
		;;
	*)
		print -u 2 "Unable to proxy: socat version $version unsupported"
		exit 1
esac
