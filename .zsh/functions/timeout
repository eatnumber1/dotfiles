function timeout {
	setopt err_return
	zmodload -F zsh/zutil +b:zparseopts
	typeset -a zselect_timeout_opt sigkill_timeout_opt
	zselect_timeout_opt=( "" 500 )
	sigkill_timeout_opt=( "" 100 )
	zparseopts -D -K t:=zselect_timeout_opt -timeout:=zselect_timeout_opt k:=sigkill_timeout_opt -kill:=sigkill_timeout_opt
	if [[ $# -eq 0 ]]; then
		printf "Usage: %s [-t/--timeout timeout] [-k/--kill sigkill_timeout] command [args...]\n" "$0" >&2
		return 1
	fi
	typeset -i sigkill_timeout="$sigkill_timeout_opt[2]" zselect_timeout="$zselect_timeout_opt[2]"
	{
		zmodload -F zsh/system +p:sysparams
		printf "%d\n" "$sysparams[pid]"
		exec "$@"
	} | {
		typeset -i pid
		read -r pid
		typeset -i ret=0
		zmodload -F zsh/zselect +b:zselect
		# Warning: This will time-out on applications which simply close(1) and continue.
		if ! zselect -t $zselect_timeout 0 || kill -0 $pid 2>/dev/null; then
			printf "Timed Out\n"
			kill $pid 2>/dev/null || :
			if ! zselect -t $sigkill_timeout 0 || kill -0 $pid 2>/dev/null; then
				kill -9 $pid 2>/dev/null || :
				if ! zselect -t 100 0 || kill -0 $pid 2>/dev/null; then
					printf "Unable to kill pid %d\n" $pid >&2
				fi
			fi
			ret=1
		fi
		typeset -fU cat
		cat || :
		return ret
	}
}

# vim: ft=zsh
