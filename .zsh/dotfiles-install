#!/usr/bin/env zsh
emulate -L zsh
setopt err_exit no_unset
#setopt xtrace

echo "Updating submodules"
git submodule update --init --recursive

.zsh/syntax-check-dotfiles

echo "Fixing permissions on the .ssh directory"
zmodload -F zsh/parameter +p:commands
if (( $+commands[restorecon] )) restorecon -R .ssh
chmod go= .ssh
for f (.ssh/*) if [[ -f "$f" ]] chmod go-w "$f"

echo "Setting up authorized_keys2"
cp .ssh/.authorized_keys2 .ssh/authorized_keys2

if [[ $OSTYPE =~ darwin.+ ]]; then
  # GMacs have a custom ssh-add command that doesn't support -K. Use an
  # absolute path to bypass ssh-add on GMac.
  /usr/bin/ssh-add --apple-use-keychain ~/.ssh/id_rsa
fi

# Usage: install_cli $progname $version
function install_cli {
  local prog=$1
  local version=$2
  local architecture="$(uname -m)"

  echo "Installing $prog"

  case "$OSTYPE" in
    linux-gnu*)
      platform="linux-gnu"
      vendor="unknown"
      ;;
    darwin*)
      platform="darwin"
      vendor="apple"
      ;;
    *)
      echo "Unknown platform $OSTYPE, will not install $prog" >&2
      return
  esac

  zmodload -F zsh/parameter +p:commands
  if [[ $vendor == "apple" ]] && (( ! ${+commands[bkt]} && ${+commands[brew]} )); then
    # TODO replace this with something generic
    brew install bkt
  else
    ln -sf "$HOME/bin/${prog}.${version}.${architecture}-${vendor}-${platform}" $HOME/bin/${prog}
  fi
}

install_cli bkt v0.8.0
install_cli op v2.30.0

unfunction install_cli

autoload is-at-least
if ! is-at-least 5.2 $ZSH_VERSION; then
  echo "Need at least zsh 5.2 for spaceship prompt." >&2
fi
